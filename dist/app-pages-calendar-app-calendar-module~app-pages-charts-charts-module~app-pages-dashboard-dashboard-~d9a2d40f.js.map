{"version":3,"sources":["webpack:///./node_modules/widgster/widgster.js","webpack:///./src/app/theme/directives/directives.module.ts","webpack:///./src/app/theme/directives/widget/widget.directive.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,kBAAkB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA,kCAAkC;AAClC,SAAS;AACT,kCAAkC;AAClC;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,wCAAwC,wBAAwB;;AAEhE;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,8FAA8F,QAAQ,UAAU,WAAW;AAC3H,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA,SAAS;AACT;;AAEA;AACA,CAAC,E;;;;;;;;;;;;;;;;;;;;;;;ACrSwC;AACM;AACa;AAa5D;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAX5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;aACb;YACD,YAAY,EAAE;gBACZ,wEAAe;aAChB;YACD,OAAO,EAAE;gBACL,wEAAe;aAClB;SACF,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfiC;AAC5C;AAKlB;IAIE,yBAAY,EAAc;QACxB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;QACpC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,GAAG,cAAc,CAAC;QAEtE,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,CAAC;YACtC,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAC;YACnF,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACnD,QAAQ,CAAC,MAAM,EAAE,CAAC;YACpB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,uBAAuB,EAAE,UAAC,CAAC;YAC3C,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAC,CAAC;YACzB,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IACtB,CAAC;IAxBU,eAAe;QAH3B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;SACrB,CAAC;yCAKgB,wDAAU;OAJf,eAAe,CA0B3B;IAAD,sBAAC;CAAA;AA1B2B","file":"app-pages-calendar-app-calendar-module~app-pages-charts-charts-module~app-pages-dashboard-dashboard-~d9a2d40f.js","sourcesContent":["/**\n * Widgster plugin.\n */\n( function( global, factory ) {\n    \"use strict\";\n\n    if (global.jQuery && global.jQuery.fn) {\n        factory(global.jQuery);\n    } else {\n        console.warn(\"Widgster must be executed in a browser environment with jQuery defined\");\n    }\n} )( typeof window !== \"undefined\" ? window : this, function( $ ) {\n    // WIDGSTER CLASS DEFINITION\n    // ======================\n\n    var Widgster = function (el, options) {\n        this.$element = $(el);\n        this.$collapse = this.$element.find('[data-widgster=collapse]');\n        this.$expand = this.$element.find('[data-widgster=expand]');\n        this.$fullscreen = this.$element.find('[data-widgster=fullscreen]');\n        this.$restore = this.$element.find('[data-widgster=restore]');\n        this.options = options;\n        this.collapsed = options.collapsed;\n        this.fullscreened = options.fullscreened;\n\n        this._initHandlers();\n\n        if (this.collapsed){\n            this.collapse(false);\n        } else {\n            this.$expand.hide();\n        }\n\n        if (this.fullscreened){\n            this.fullscreen();\n        } else {\n            this.$restore.hide();\n        }\n\n        this.options.autoload && this.load();\n        var interval = parseInt(this.options.autoload);\n        if (!isNaN(interval)){\n            var widgster = this;\n            this._autoloadInterval = setInterval(function(){\n                widgster.load();\n            }, interval)\n        }\n    };\n\n    Widgster.DEFAULTS = {\n        collapsed: false,\n        fullscreened: false,\n        transitionDuration: 150,\n        bodySelector: '.body',\n        showLoader: true,\n        autoload: false,\n        loaderTemplate: '<div style=\"text-align: center; margin-top: 10px;\">Loading...</div>',\n        /**\n         * provide a way to insert a prompt before removing widget\n         * @param callback\n         */\n        closePrompt: function(callback){\n            callback()\n        }\n    };\n\n    Widgster.prototype.collapse = function(animate){\n        animate = typeof animate == \"undefined\" ? true : animate;\n        var e = $.Event('collapse.widgster');\n        this.$element.trigger(e);\n        if (e.isDefaultPrevented()) return;\n\n        var widgster = this,\n            duration = animate ? this.options.transitionDuration : 0;\n        this.$element.find(this.options.bodySelector).slideUp(duration, function(){\n            widgster.$element.addClass('collapsed');\n            widgster.$element.trigger($.Event('collapsed.widgster'));\n            widgster.collapsed = true;\n        });\n\n        this.$collapse.hide();\n        this.$expand.show();\n\n        return false;\n    };\n\n    Widgster.prototype.expand = function(animate){\n        animate = typeof animate == \"undefined\" ? true : animate;\n        var e = $.Event('expand.widgster');\n        this.$element.trigger(e);\n        if (e.isDefaultPrevented()) return;\n\n        var widgster = this,\n            duration = animate ? this.options.transitionDuration : 0;\n        this.$element.find(this.options.bodySelector).slideDown(duration, function(){\n            widgster.$element.removeClass('collapsed');\n            widgster.$element.trigger($.Event('expanded.widgster'));\n            widgster.collapsed = false;\n        });\n\n        this.$collapse.show();\n        this.$expand.hide();\n\n        return false;\n    };\n\n    Widgster.prototype.close = function(){\n\n        this.options.closePrompt && this.options.closePrompt($.proxy(this._doClose, this));\n\n        return false;\n    };\n\n    Widgster.prototype.load = function(){\n        var e = $.Event('load.widgster');\n\n        this.$element.trigger(e);\n\n        if (e.isDefaultPrevented()) return;\n\n        var widgster = this;\n        this.$element.find(this.options.bodySelector).load(this.options.load, function(responseText, textStatus, xhr){\n            widgster.expand();\n            widgster.options.showLoader && widgster._hideLoader();\n            widgster.$element.trigger($.Event('loaded.widgster', {\n                responseText: responseText,\n                textStatus: textStatus,\n                xhr: xhr\n            }))\n        });\n        this.options.showLoader && this._showLoader();\n\n        return false;\n    };\n\n    Widgster.prototype.fullscreen = function(){\n        var e = $.Event('fullscreen.widgster');\n\n        this.$element.trigger(e);\n\n        if (e.isDefaultPrevented()) return;\n\n        this.$element.css({\n            position: 'fixed',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            margin: 0,\n            'z-index': 10000\n        });\n        $('body').css('overflow', 'hidden');\n\n        this.wasCollapsed = this.collapsed;\n        this.expand(false);\n\n        this.$fullscreen.hide();\n        this.$restore.show();\n\n        this.$collapse.hide(); this.$expand.hide();\n\n        this.$element.addClass('fullscreened');\n\n        this.$element.trigger($.Event('fullscreened.widgster'));\n\n        return false;\n    };\n\n    Widgster.prototype.restore = function(){\n        var e = $.Event('restore.widgster');\n\n        this.$element.trigger(e);\n\n        if (e.isDefaultPrevented()) return;\n\n        this.$element.css({\n            position: '',\n            top: '',\n            right: '',\n            bottom: '',\n            left: '',\n            margin: '',\n            'z-index': ''\n        });\n        $('body').css('overflow', '');\n\n        this.$fullscreen.show();\n        this.$restore.hide();\n\n        if (this.collapsed){\n            this.$collapse.hide(); this.$expand.show();\n        } else {\n            this.$collapse.show(); this.$expand.hide();\n        }\n\n        this.wasCollapsed && this.collapse(false);\n\n        this.$element.removeClass('fullscreened');\n\n        this.$element.trigger($.Event('restored.widgster'));\n\n        return false;\n    };\n\n    Widgster.prototype._doClose = function(){\n        //could have been remove.widgster, but http://bugs.jquery.com/ticket/14600\n        var e = $.Event('close.widgster');\n\n        this.$element.trigger(e);\n\n        if (e.isDefaultPrevented()) return;\n\n        $('body').css('overflow', '');\n\n        this.$element.detach();\n\n        e = $.Event('closed.widgster', {$element: this.$element});\n\n        this.$element.trigger(e);\n    };\n\n    Widgster.prototype._showLoader = function(){\n        var $body = this.$element.find(this.options.bodySelector);\n\n        this.$loaderWrap = this.$element.find('.widgster-loader-wrap');\n\n        //create loader html if does not exist\n        if (this.$loaderWrap.length == 0){\n            this.$loaderWrap = $('<div class=\"widgster-loader-wrap\" style=\"position: absolute; top: 0; right: 0; bottom: 0; ' +\n                'left: 0; display: none\"></div>');\n            this.$element.append(this.$loaderWrap);\n        }\n        this.$loaderWrap.html(this.options.loaderTemplate);\n        this.$loaderWrap.css({\n            'margin-top': $body.position().top\n        });\n        if (!this.collapsed){\n            $body.fadeTo(this.options.transitionDuration, 0);\n            this.$loaderWrap.fadeIn(this.options.transitionDuration)\n        }\n    };\n\n    Widgster.prototype._hideLoader = function(){\n        this.$loaderWrap.fadeOut(this.options.transitionDuration);\n        this.$element.find(this.options.bodySelector).fadeTo(this.options.transitionDuration, 1);\n    };\n\n    /**\n     * Attach all required widgster functions to data-widgster elements.\n     * @private\n     */\n    Widgster.prototype._initHandlers = function(){\n        this.$element.on('click.collapse.widgster', '[data-widgster=collapse]', $.proxy(this.collapse, this));\n        this.$element.on('click.expand.widgster', '[data-widgster=expand]', $.proxy(this.expand, this));\n        this.$element.on('click.close.widgster', '[data-widgster=close]', $.proxy(this.close, this));\n        this.$element.on('click.load.widgster', '[data-widgster=load]', $.proxy(this.load, this));\n        this.$element.on('click.fullscreen.widgster', '[data-widgster=fullscreen]', $.proxy(this.fullscreen, this));\n        this.$element.on('click.restore.widgster', '[data-widgster=restore]', $.proxy(this.restore, this));\n    };\n\n\n    // NAMESPACED DATA ATTRIBUTES\n    // =======================\n\n    function getNamespacedData(namespace, data){\n        var namespacedData = {};\n        for (var key in data){\n            // key starts with namespace\n            if (key.slice(0, namespace.length) == namespace){\n                var namespacedKey = key.slice(namespace.length, key.length);\n                namespacedKey = namespacedKey.charAt(0).toLowerCase() + namespacedKey.slice(1);\n                namespacedData[namespacedKey] = data[key];\n            }\n        }\n\n        return namespacedData;\n    }\n\n    // WIDGSTER PLUGIN DEFINITION\n    // =======================\n\n    $.fn.widgster = function (option) {\n        return this.each(function () {\n            var $this   = $(this);\n            var data    = $this.data('widgster');\n            var options = $.extend({}, Widgster.DEFAULTS, getNamespacedData('widgster', $this.data()), typeof option == 'object' && option);\n\n            if (!data) $this.data('widgster', new Widgster(this, options));\n            if (typeof option == 'string') data[option]();\n        })\n    };\n\n    $.fn.widgster.Constructor = Widgster;\n});","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WidgetDirective } from './widget/widget.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    WidgetDirective\r\n  ],\r\n  exports: [ \r\n      WidgetDirective\r\n  ]\r\n})\r\nexport class DirectivesModule { }\r\n","import { Directive, ElementRef, OnInit } from '@angular/core';\r\nimport 'widgster';\r\n\r\n@Directive({\r\n  selector: '[widget]'\r\n})\r\nexport class WidgetDirective {\r\n\r\n   $el: any;\r\n\r\n  constructor(el: ElementRef) {\r\n    this.$el = jQuery(el.nativeElement);\r\n    jQuery.fn.widgster.Constructor.DEFAULTS.bodySelector = '.widget-body';\r\n\r\n    jQuery(document).on('close.widgster', (e) => {\r\n      let $colWrap = jQuery(e.target).closest(' [class*=\"col-\"]:not(.widget-container)');\r\n      if (!$colWrap.find('.widget').not(e.target).length) {\r\n        $colWrap.remove();\r\n      }\r\n    });\r\n\r\n    jQuery(document).on(\"fullscreened.widgster\", (e) => {\r\n        jQuery(e.target).find('div.widget-body').addClass('card-block-scrolling');\r\n    }).on(\"restored.widgster\", (e) => {\r\n        jQuery(e.target).find('div.widget-body').removeClass('card-block-scrolling');\r\n    }); \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.$el.widgster();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}