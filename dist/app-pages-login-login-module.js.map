{"version":3,"sources":["webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.scss","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/login/login.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,i6EAAi6E,+/C;;;;;;;;;;;ACAj6E,oCAAoC,uBAAuB,EAAE,yCAAyC,kBAAkB,mBAAmB,qBAAqB,wBAAwB,yBAAyB,sBAAsB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5K;AACpB;AACwD;AAC/C;AAQlD;IAME,wBAAY,MAAa,EAAE,EAAc;QACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC;YACjB,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,+DAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;YAChF,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvF,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAEM,iCAAQ,GAAf,UAAgB,MAAa;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC9C,CAAC;IACL,CAAC;IAED,wCAAe,GAAf;QACI,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC/D,CAAC;IAzBU,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;YAGrB,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAOmB,sDAAM,EAAK,0DAAW;OAN9B,cAAc,CA2B1B;IAAD,qBAAC;CAAA;AA3B0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXc;AACM;AACA;AACmB;AACf;AAE5C,IAAM,MAAM,GAAG;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAc,EAAE,SAAS,EAAE,MAAM,EAAE;CAC3D,CAAC;AAYF;IAAA;IAA2B,CAAC;IAAf,WAAW;QAVvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,+DAAc,CAAC;SAC/B,CAAC;OAEW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ","file":"app-pages-login-login-module.js","sourcesContent":["module.exports = \"<div class=\\\"d-flex justify-content-center align-items-center w-100 h-100 login-container\\\">\\r\\n    <div class=\\\"col-xl-4 col-md-6 col-10\\\">\\r\\n        <div class=\\\"card border-0 box-shadow rounded-0\\\">\\r\\n            <div class=\\\"card-header d-flex justify-content-center align-items-center border-0 box-shadow\\\">\\r\\n                <i class=\\\"fa fa-sign-in\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </div>\\r\\n            <div class=\\\"card-body text-center pb-1\\\">\\r\\n                <h2>Member login</h2>\\r\\n                <a routerLink=\\\"/register\\\" class=\\\"transition\\\">Don't have an account? Sign up now!</a>\\r\\n\\r\\n                <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"text-left mt-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"email\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Email\\\" type=\\\"text\\\">                      \\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('email').touched && form.get('email').hasError('required')\\\">Email is required</small>                              \\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('email').touched && form.get('email').hasError('email')\\\">Invalid email address</small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"password\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('password').touched && form.get('password').hasError('required')\\\">Password is required</small>                              \\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('password').touched && form.get('password').hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</small>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group d-flex justify-content-between\\\">\\r\\n                        <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"login-checkbox\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"login-checkbox\\\">Keep me signed in.</label>\\r\\n                        </div>\\r\\n                        <a class=\\\"transition pull-right\\\" href=\\\"javascript:void(0);\\\">Forgot password?</a>                     \\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-block\\\" type=\\\"submit\\\">Sign in</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer text-center bg-transparent\\\">\\r\\n                <ul class=\\\"list-inline mb-0\\\">\\r\\n                    <li class=\\\"list-inline-item\\\">\\r\\n                        <span class=\\\"fa-stack fa-lg\\\">\\r\\n                            <i class=\\\"fa fa-square-o fa-stack-2x\\\"></i>\\r\\n                            <i class=\\\"fa fa-facebook fa-stack-1x\\\"></i>\\r\\n                        </span>\\r\\n                    </li>\\r\\n                    <li class=\\\"list-inline-item\\\">\\r\\n                        <span class=\\\"fa-stack fa-lg\\\">\\r\\n                            <i class=\\\"fa fa-square-o fa-stack-2x\\\"></i>\\r\\n                            <i class=\\\"fa fa-twitter fa-stack-1x\\\"></i>\\r\\n                        </span>\\r\\n                    </li>\\r\\n                    <li class=\\\"list-inline-item\\\">\\r\\n                        <span class=\\\"fa-stack fa-lg\\\">\\r\\n                            <i class=\\\"fa fa-square-o fa-stack-2x\\\"></i>\\r\\n                            <i class=\\\"fa fa-google fa-stack-1x\\\"></i>\\r\\n                        </span>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n       \"","module.exports = \".login-container {\\n  position: absolute; }\\n  .login-container .card .card-header {\\n    width: 80px;\\n    height: 80px;\\n    margin: 0 auto;\\n    margin-top: -40px;\\n    border-radius: 50%;\\n    font-size: 36px; }\\n\"","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators} from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LoginComponent {\r\n  public router: Router;\r\n  public form:FormGroup;\r\n  public email:AbstractControl;\r\n  public password:AbstractControl;\r\n\r\n  constructor(router:Router, fb:FormBuilder) {\r\n      this.router = router;\r\n      this.form = fb.group({\r\n          'email': ['', Validators.compose([Validators.required, CustomValidators.email])],\r\n          'password': ['', Validators.compose([Validators.required, Validators.minLength(6)])]\r\n      });\r\n\r\n      this.email = this.form.controls['email'];\r\n      this.password = this.form.controls['password'];\r\n  }\r\n\r\n  public onSubmit(values:Object):void {\r\n      if (this.form.valid) {\r\n          this.router.navigate(['pages/dashboard']);\r\n      }\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n      document.getElementById('preloader').classList.add('hide');                 \r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LoginComponent]\r\n})\r\n\r\nexport class LoginModule { }"],"sourceRoot":""}